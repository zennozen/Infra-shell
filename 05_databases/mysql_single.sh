#!/usr/bin/env bash
# https://dev.mysql.com/downloads/mysql/
set -o errexit

script_path="$(dirname ${BASH_SOURCE[0]})"
abs_script_path="$(realpath "${BASH_SOURCE[0]}")"
workdir="$(dirname "$abs_script_path")"

# import some define
source "$script_path/../00_utils/_print.sh"
source "$script_path/../00_utils/_trap.sh"
source "$script_path/../00_utils/_logger.sh"

# capture errors and print environment variables
trap '_trap_print_env \
  SRV_IP MYSQL_VER MYSQL_HOME MYSQL_CONF MYSQL_LISTEN_PORT MYSQL_ROOT_PASSWORD
' ERR

# define golabal variables
SRV_IP="$(ip -4 addr show | grep inet | grep -v 127.0.0.1 | awk 'NR==1 {print $2}' | cut -d'/' -f1)"
readonly MYSQL_CONF="/etc/my.cnf"

#######################################
## Main Business Logic Begins
#######################################

function remove_mariadb() {
  _logger info "1. Remove conflicting MariaDB packages"
  dnf list --installed | grep mariadb || _logger info "No MariaDB packages are installed on the system."
  dnf remove -qy $(dnf list --installed | grep mariadb | awk '{print $1}')
}

function rpm_install() {
  _print_line title "Install mysql via rpm"

  remove_mariadb

  _logger info "2. Check and install mysql-server"
  which mysqld 2>/dev/null && _logger error "Mysql-server already installed on the system." && exit 1
  dnf install -y mysql-server

  _logger info "3. Update and verify the MySQL config file"
  _logger info "Backup and update current config: /etc/my.cnf"
  [[ -d /etc/my.cnf.d ]] && rm -rf /etc/my.cnf.d/* || { mkdir /etc/my.cnf.d && chown -R mysql:mysql $_; }
  [[ -f $MYSQL_CONF ]] && cp -v $MYSQL_CONF ${MYSQL_CONF}_$(date +'%Y%m%d-%H%M').bak
  tee $MYSQL_CONF << EOF
[mysqld]
## Base settings
server-id = 1
port = 3306
datadir = /var/lib/mysql
socket = /var/lib/mysql/mysql.sock
log-error = /var/log/mysql/mysqld.log
pid-file = /var/run/mysqld/mysqld.pid
slow_query_log = 1
slow_query_log_file = /var/log/mysql/logs/slow.log
long_query_time = 2
lower_case_table_names = 1

## Bin-log settings
log-bin = mysql-bin
relay-log = mysql-relay-bin
max_binlog_size = 100M
binlog_expire_logs_auto_purge = ON
binlog_expire_logs_seconds = 604800
binlog_checksum = None
log_replica_updates = ON
gtid_mode = ON                   # Enable GTID mode
enforce_gtid_consistency = ON    # Enforce GTID consistency check

# Scope of effect: Any client using the libmysqlclient library, including mysql, mysqladmin, mysqldump
[client]
user = root
host = localhost
password = "$MYSQL_ROOT_PASSWORD"
socket = /var/lib/mysql/mysql.sock  # Use the mysql.sock generated by the server above

# Scope of effect: MySQL command-line tool
[mysql]
prompt="\u@\h [\d]> "
history=~/.mysql_history
auto-rehash=off
pager=less
default-character-set=utf8mb4

!includedir /etc/my.cnf.d/
EOF
  _logger info "Validate the config: $MYSQL_CONF"
  mysqld --validate-config && echo "It's ok."
}

function tar_install() {
  local MYSQL_VERS=("8.0.41" "8.4.4" "9.2.0")
  local MYSQL_V=$(echo $MYSQL_VER | cut -d'.' -f1,2)
  local MYSQL_PKG_PREFIX="mysql-${MYSQL_VER}-linux-glibc2.28-x86_64"
  local MYSQL_URL="https://cdn.mysql.com/Downloads/MySQL-${MYSQL_V}/${MYSQL_PKG_PREFIX}.tar.xz"

  _print_line title "Install mysql via binary tar.xz package"

  # check args
  [[ -z $(ls -A $MYSQL_HOME &>/dev/null) ]] || { _logger error "MySQL is already installed in $MYSQL_HOME." && exit 1; }
  if [[ -z $MYSQL_VER ]] || ! echo ${MYSQL_VERS[@]} | grep -wq "$MYSQL_VER"; then
    _logger error "Version mismatch. Please choose from the below."
    echo -e "Official recommended versions: ${MYSQL_VERS[@]}"
    exit 1
  fi

  remove_mariadb

  _logger info "2. Download and extract the MySQL binary tar.xz package"
  if [[ -f /usr/local/src/${MYSQL_PKG_PREFIX}.tar.xz ]]; then
    _logger warn "${MYSQL_PKG_PREFIX}.tar.xz is already exists in /usr/local/src/, will use."
  else
    wget -c $MYSQL_URL -P /usr/local/src/
  fi
  cd /usr/local/src/
  _logger info "Decompressing ..."
  tar -xf ${MYSQL_PKG_PREFIX}.tar.xz -C /usr/local/
  mv /usr/local/$MYSQL_PKG_PREFIX $MYSQL_HOME

  _logger info "3. Create necessary user and directories, update permissions and PATH"
  id mysql 2>/dev/null || useradd -r mysql
  mkdir -p $MYSQL_HOME/{data,logs}
  chown -R mysql:mysql $MYSQL_HOME

  echo "export MYSQL_HOME=$MYSQL_HOME" >> /etc/profile
  echo "export PATH=\$PATH:\$MYSQL_HOME/bin" >> /etc/profile
  # source /etc/profile   # Avoid potential issues from erroneous environment variables
  export MYSQL_HOME=$MYSQL_HOME
  export PATH=$PATH:$MYSQL_HOME/bin
  echo -e "PATH: $PATH"

  _logger info "4. Update and verify the MySQL config file"
  _logger info "Backup and update current config: /etc/my.cnf"
  [[ -d /etc/my.cnf.d ]] && rm -rf /etc/my.cnf.d/* || { mkdir /etc/my.cnf.d && chown -R mysql:mysql $_; }
  [[ -f $MYSQL_CONF ]] && cp -v $MYSQL_CONF ${MYSQL_CONF}_$(date +'%Y%m%d-%H%M').bak
  tee $MYSQL_CONF <<-EOF
[mysqld]
## Base settings
server-id = 1
port = $MYSQL_LISTEN_PORT
basedir = $MYSQL_HOME
datadir = $MYSQL_HOME/data
socket = /tmp/mysql.sock
pid-file = $MYSQL_HOME/data/mysqld.pid
slow_query_log = 1
slow_query_log_file = /usr/local/mysql/logs/slow.log
long_query_time = 2
lower_case_table_names = 1

## Bin-log settings
log-bin = mysql-bin
relay-log = mysql-relay-bin
max_binlog_size = 100M
binlog_expire_logs_auto_purge = ON
binlog_expire_logs_seconds = 604800
binlog_checksum = None
log_replica_updates = ON
gtid_mode = ON                   # Enable GTID mode
enforce_gtid_consistency = ON    # Enforce GTID consistency check

# Scope of effect: Any client using the libmysqlclient library, including mysql, mysqladmin, mysqldump
[client]
user = root
host = localhost
password = "$MYSQL_ROOT_PASSWORD"
socket = /tmp/mysql.sock  # Use the mysql.sock generated by the server above

# Scope of effect: MySQL command-line tool
[mysql]
prompt="\u@\h [\d]> "
history=~/.mysql_history
auto-rehash=off
pager=less
default-character-set=utf8mb4

!includedir /etc/my.cnf.d/
EOF
  _logger info "Validate the config: $MYSQL_CONF"
  mysqld --validate-config && echo "It's ok."

  _logger info "5. Initialize MySQL database"
  mysqld --initialize-insecure --user=mysql

  _logger info "6. Create the service unit file, manage using systemctl"
  local MYSQL_SERVICE_UNIT="/etc/systemd/system/mysqld.service"
  [[ -f $MYSQL_SERVICE_UNIT ]] && cp -fv $MYSQL_SERVICE_UNIT $MYSQL_SERVICE_UNIT.bak
  tee $MYSQL_SERVICE_UNIT <<-EOF
[Unit]
Description=Mysql Server
Documentation=man:mysqld(8)
Documentation=https://dev.mysql.com/doc/refman/en/using-systemd.html
After=network.target
After=syslog.target

[Service]
User=mysql
Group=mysql
ExecStart=/usr/local/mysql/bin/mysqld --defaults-file=/etc/my.cnf
# Set enviroment variable MYSQLD_PARENT_PID. This is required for restart.
Environment=MYSQLD_PARENT_PID=1
RestartForceExitStatus=16
RestartPreventExitStatus=1

[Install]
WantedBy=multi-user.target
EOF
}

function start_service() {
  _logger info "7. Start and enable MySQL service"
  systemctl enable --now mysqld && sleep 3
  systemctl status --no-pager -l mysqld
  echo

  _logger info "8. Check and open the corresponding firewall ports"
  if systemctl status firewalld | grep "active (running)" &>/dev/null; then
    firewall-cmd --add-port={$MYSQL_LISTEN_PORT,33060}/tcp --permanent &>/dev/null
    firewall-cmd --reload &>/dev/null
    echo -e "Current open ports in the firewall: ${green}$(firewall-cmd --list-ports)${reset}"
  else
    _logger warn "System firewalld is currently disabled."
  fi
}

function execute_init_sql() {
  local INIT_SQL="ALTER USER 'root'@'localhost' IDENTIFIED BY '$MYSQL_ROOT_PASSWORD';
    RENAME USER 'root'@'localhost' TO 'root'@'%';
    GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;"
  local REMOTE_LOGIN_CMD="mysql -h $SRV_IP -P $MYSQL_LISTEN_PORT -u root -p$MYSQL_ROOT_PASSWORD"

  _logger info "9. Essential client CLI tools installed and executed custom SQL"
  which mysql 2>/dev/null || dnf install -y mysql
  mysql -u root --skip-password <<< "$INIT_SQL"  2>/dev/null
  echo

  _print_line split -
  _logger info "MySQL service has been successfully installed. Summary:"
  mysqladmin version
  echo
  if grep HOME /etc/profile; then
    echo -e "${red}Note: Detected the above environment variables are not in effect."
    echo -e "      Please run ${blue}source /etc/profile ${red}to apply them.${reset}"
  fi
  echo
  echo -e "${green}Local login command: ${blue}mysql${reset}"
  echo -e "${green}Remote login command: ${blue}$REMOTE_LOGIN_CMD${reset}"
}

function remove() {
  local MYSQL_HOME=$(awk '/basedir/ {print $3}' $MYSQL_CONF)
  local MYSQL_HOME=${MYSQL_HOME:-/usr/local/mysql}
  local MYSQL_LISTEN_PORT=$(awk '/port/ {print $3}' $MYSQL_CONF)
  local MYSQL_LISTEN_PORT=${MYSQL_LISTEN_PORT:-3306}

  # check args
  dnf list --installed | grep mysql-server || [[ -d ${MYSQL_HOME} ]] || { _logger error "MySQL is not installed." && exit 1; }

  _print_line title "Remove MySQL service"

  _logger info "1. Check and kill processes ..."
  systemctl is-active --quiet mysqld && systemctl stop mysqld || true && sleep 3
  while ps -ef | grep "[m]ysqld" | grep -v "pts" &>/dev/null; do
    echo -e "${yellow}MySQL service is stopping, if necessary, please manually kill: ${red}pkill -9 mysqld${reset}"
    sleep 5
  done

  _logger info "2. Delete related files ..."
  ! dnf list --installed | grep mysql-server || dnf remove -y mysql-server
  rm -rfv $MYSQL_HOME /var/log/mysql/ /etc/my.cnf.d
  rm -rfv /etc/systemd/system/mysqld.service && systemctl daemon-reload

  _logger info "3. Delete mysql user"
  id mysql && userdel -f mysql

  _logger info "4. Close the corresponding firewall ports"
  if systemctl status firewalld >/dev/null; then
    firewall-cmd --remove-port=$MYSQL_LISTEN_PORT/tcp --permanent &>/dev/null
    firewall-cmd --reload >/dev/null
    echo -e "Current open ports in the firewall: $(firewall-cmd --list-ports)"
  else
    _logger warn "System firewalld is currently disabled."
  fi

  _logger info "5. Remove the corresponding environment variable"
  sed -i "/MYSQL_HOME/d" /etc/profile

  _print_line split -
  _logger info "MySQL has been successfully removed.\n"
}

function main() {
  function _help() {
    printf "Invalid option ${@:1}\n"
    printf "${green}Usage: ${reset}\n"
    printf "    ${gray}bash ${blue}$0 ${green}rpm_install ${gray}MYSQL_ROOT_PASSWORD 3306${reset}\n"
    printf "    ${gray}bash ${blue}$0 ${green}tar_install 8.4.4 ${gray}MYSQL_ROOT_PASSWORD 3306 /usr/local/mysql${reset}\n"
    printf "    ${gray}bash ${blue}$0 ${green}remove ${reset}\n"
  }

  case $1 in
    rpm_install)
      shift
      MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD:-${1:-AAAaaa12#$}}"
      MYSQL_LISTEN_PORT="${MYSQL_LISTEN_PORT:-${2:-3306}}"
      rpm_install
      start_service
      execute_init_sql
      ;;
    tar_install)
      shift
      [[ $# -gt 0 ]] || { _help && exit 1; }
      MYSQL_VER="$(echo "$@" | grep -oP '\b\d+\.\d+\.\d+\b' | head -n 1)"
      shift
      MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD:-${1:-AAAaaa12#$}}"
      MYSQL_LISTEN_PORT="${MYSQL_LISTEN_PORT:-${2:-3306}}"
      MYSQL_HOME="${3:-/usr/local/mysql}"
      tar_install
      start_service
      execute_init_sql
      ;;
    remove)
      remove
      ;;
    *)
      _help ${@:1} && exit 1 ;;
  esac
}

main ${@:1}
